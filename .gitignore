# helm dependencies
src/kubernetes/helm/charts/**/charts
Chart.lock
labs/**
labs**
workspaces/**
workspaces/*
workspaces**
**/builds
**/K8s*CA*
.vscode/settings.json

# Local .terraform directories
**/.terraform/*
**/tfstate
# .tfstate files
*.terraform.lock.hcl
*.tfstate
*.tfstate.*
*.tar.gz
*.tgz

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version
# control as they are data points which are potentially sensitive and subject
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
dynamic_backend.tf.json
**dynamic_backend.tf.json
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

t/**
2fa_yaml.yml
workspaces/aws_peerings.tf
workspaces/*.*.png
**.tfplan

**oidc-monitoring.yaml
**.pem
**.key
**.crt
**kubeconf**
**kubeadmin**
**/okd_azuread_oidc*
**/terraform.aws.auto.tfvars.json
**/terraform.tfvars.json
**.gpg
**creds**
**/helper_scripts/*.png
workspaces/aws_providers.tf

# Node artifact files
node_modules/
dist/

# Compiled Java class files
*.class

# Compiled Python bytecode
*.py[cod]

# Log files
*.log

# Package files
*.jar

# Maven
target/
dist/

# JetBrains IDE
.idea/

# Unit test reports
TEST*.xml

# Generated by MacOS
.DS_Store

# Generated by Windows
Thumbs.db

# Applications
*.app
*.exe
*.war

# Large media files
*.mp4
*.tiff
*.avi
*.flv
*.mov
*.wmv
**tfstate
*tfstate

core.*

**/oidc-*.yaml
**.asc
**.pgp
**-tmp.*
**-tmp
.vscode/diff/vulsCount.txt
.vscode/launch.json
### Generated by gibo (https://github.com/simonwhitaker/gibo)
### https://raw.github.com/github/gitignore/4488915eec0b3a45b5c63ead28f286819c0917de/Go.gitignore

# If you prefer the allow list template instead of the deny list, see community template:
# https://github.com/github/gitignore/blob/main/community/Golang/Go.AllowList.gitignore
#
# Binaries for programs and plugins
*.exe
*.exe~
*.dll
*.so
*.dylib

# Test binary, built with `go test -c`
*.test

# Output of the go coverage tool, specifically when used with LiteIDE
*.out

# Dependency directories (remove the comment below to include it)
vendor/

# Go workspace file
go.work
